<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="clr-namespace:Turbulence.Desktop.Views.Main"
             xmlns:dvm="clr-namespace:Turbulence.Core.ViewModels.Design;assembly=Turbulence.Core"
             xmlns:channel="clr-namespace:Turbulence.Discord.Models.DiscordChannel;assembly=Turbulence.Discord"
             xmlns:converters="clr-namespace:Turbulence.Desktop.Converters"
             xmlns:dataTemplates="clr-namespace:Turbulence.Desktop.DataTemplates"
             mc:Ignorable="d" d:DesignWidth="500"
             x:DataType="channel:Message"
             x:Class="Turbulence.Desktop.Views.Main.MessageView"
             Name="Message">
    <Design.DataContext>
        <dvm:DesignMessage />
    </Design.DataContext>
    <UserControl.Resources>
        <converters:MessageAuthorNameConverter x:Key="AuthorConverter" />
        <converters:MessageContentConverter x:Key="MessageConverter" />
        <converters:MessageVisibleConverter x:Key="MessageVisibleConverter" />
        <converters:UserAvatarConverter x:Key="AvatarConverter" />
        <converters:EmojiImageConverter x:Key="EmojiConverter" />
        <converters:ImageUrlConverter x:Key="ImageUrlConverter" />
    </UserControl.Resources>
    <UserControl.ContextFlyout>
        <v:MessageContextMenu />
    </UserControl.ContextFlyout>
    <UserControl.Styles>
        <Style Selector="Button.JumpTo">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Background" Value="#1E1F22" />
            <Setter Property="Foreground" Value="#AFB8C1" />
        </Style>
        <Style Selector="Button.Reaction">
            <Setter Property="Background" Value="#2B2D31" />
        </Style>
        <Style Selector="Button.Reaction TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style Selector="Button.Reaction:pointerover">
            <Setter Property="BorderBrush" Value="Gray" />
        </Style>
        <Style Selector="Button.Reaction.Selected">
            <Setter Property="BorderBrush" Value="#5865F2" />
        </Style>
        <Style Selector="Button.Reaction.Selected:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="BorderBrush" Value="#5865F2" />
        </Style>
        <Style Selector="Button.Link">
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="Padding" Value="4" />
        </Style>
        <!-- Message Parsing -->
        <Style Selector="Run.Edit">
            <Setter Property="Foreground" Value="#949BA4" />
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style Selector="Run.Url">
            <Setter Property="TextDecorations" Value="Underline" />
            <Setter Property="Foreground" Value="#00A8FC" />
        </Style>
        <Style Selector="Run.Header1">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style Selector="Span.ITALIC">
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        <Style Selector="Span.UNDERLINE">
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        <Style Selector="Span.BOLD">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style Selector="Span.UNDERLINE">
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        <Style Selector="Span.STRIKETHROUGH">
            <Setter Property="TextDecorations" Value="Strikethrough" />
        </Style>
        <Style Selector="Span.SPOILER">
            <Setter Property="Background" Value="Gray" />
        </Style>
        <Style Selector="Span.QUOTE_BLOCK">
            <!--TODO: make these indented-->
        </Style>
        <!--TODO: different fonts-->
        <Style Selector="Span.CODE_BLOCK">
            <!--TODO: make this one full size somehow-->
            <Setter Property="Background" Value="Gray" />
        </Style>
        <Style Selector="Span.CODE_INLINE">
            <Setter Property="Background" Value="Gray" />
        </Style>
    </UserControl.Styles>
    <Grid ColumnDefinitions="Auto,*" Classes="Message">
        <!-- Avatar -->
        <DockPanel>
            <Panel IsVisible="{Binding !!ReferencedMessage}" Height="20" DockPanel.Dock="Top">
                <!--TODO: add weird spine border thingy here-->
            </Panel>
            <Border CornerRadius="50" ClipToBounds="True" Width="40" Height="40" Margin="5 0 10 0" VerticalAlignment="Top">
                <Image Name="Image" UseLayoutRounding="False" Source="{Binding Author, Converter={StaticResource AvatarConverter}}" />
            </Border>
        </DockPanel>
        <!-- Actual Message -->
        <StackPanel Grid.Column="1"
                    Orientation="Vertical"
                    Classes="MessageContent">
            <!-- Reply Message Preview -->
            <StackPanel Name="MessageReference" Height="20" Orientation="Horizontal" IsVisible="{Binding !!ReferencedMessage}">
                <TextBlock FontWeight="SemiBold" Text="{Binding ReferencedMessage, Converter={StaticResource AuthorConverter}, StringFormat='@{0} '}" />
                <!--TODO: maybe dont use the full blown parser for the reply?-->
                <TextBlock Foreground="#B5BAC1" Inlines="{Binding ReferencedMessage, Converter={StaticResource MessageConverter}}" />
            </StackPanel>
            <!-- Author Name, Timestamp etc -->
            <DockPanel>
                <!-- Keep jump button first so it takes priority over others and is always fully visible -->
                <Button Classes="JumpTo" IsVisible="{Binding #Message.ShowJumpToMessage}" DockPanel.Dock="Right">Jump To Message</Button>
                <TextBlock Name="Author" Classes="Author" Text="{Binding ., Converter={StaticResource AuthorConverter}}" DockPanel.Dock="Left" />
                <TextBlock Name="Timestamp" Classes="Timestamp" Text="{Binding Timestamp, StringFormat='G'}" DockPanel.Dock="Left">
                    <ToolTip.Tip>
                        <Label Content="{Binding Timestamp, StringFormat='F'}" />
                    </ToolTip.Tip>
                </TextBlock>
            </DockPanel>
            <!-- Message Content -->
            <TextBlock Name="Content" TextWrapping="Wrap" Classes="MessageContent"
                       Inlines="{Binding ., Converter={StaticResource MessageConverter}}"
                       IsVisible="{Binding ., Converter={StaticResource MessageVisibleConverter}}" />
            <!-- Attachments (images, files) -->
            <ItemsControl ItemsSource="{Binding Attachments}" IsVisible="{Binding !!Attachments.Length}">
                <ItemsControl.ItemTemplate>
                    <dataTemplates:AttachmentTypeSelector>
                        <DataTemplate x:Key="image" x:DataType="channel:Attachment">
                            <Image Source="{Binding ProxyUrl, Converter={StaticResource ImageUrlConverter}}" MaxWidth="100" MaxHeight="100" HorizontalAlignment="Left" />
                        </DataTemplate>
                        <DataTemplate x:Key="default" x:DataType="channel:Attachment">
                            <Button Classes="Link" Content="{Binding Filename}" Click="OnAttachmentButton" />
                        </DataTemplate>
                    </dataTemplates:AttachmentTypeSelector>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- Reactions -->
            <ItemsControl ItemsSource="{Binding Reactions}" IsVisible="{Binding !!Reactions}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="6" Margin="0,4,0,0"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="channel:Reaction">
                        <!--TODO: tooltip-->
                        <Button Classes="Reaction" Classes.Selected="{Binding Me}" BorderThickness="1" CornerRadius="5" Padding="2,0,0,0">
                            <StackPanel Orientation="Horizontal" Margin="0,2">
                                <!-- TODO: instead also render native emojis as images? -->
                                <TextBlock Text="{Binding Emoji.Name}" IsVisible="{Binding Emoji.Id, Converter={x:Static ObjectConverters.IsNull}}" />
                                <Image Source="{Binding Emoji, Converter={StaticResource EmojiConverter}}" IsVisible="{Binding !!Emoji.Id}" Width="16" Height="16" Margin="2,0,6,0" />
                                <TextBlock Text="{Binding Count}" Margin="0,0,6,0"/>
                            </StackPanel>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
